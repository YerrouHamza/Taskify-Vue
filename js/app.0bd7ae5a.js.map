{"version":3,"file":"js/app.0bd7ae5a.js","mappings":"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","sources":["webpack://task-manager-vue/./src/components/TaskCard.vue","webpack://task-manager-vue/./src/components/TaskCard.vue?dd6a","webpack://task-manager-vue/./src/components/AddTaskCard.vue","webpack://task-manager-vue/./src/components/AddTaskCard.vue?1a2e","webpack://task-manager-vue/./src/components/modals/AddModal.vue","webpack://task-manager-vue/./src/components/modals/AddModal.vue?c886","webpack://task-manager-vue/./src/components/modals/EditModal.vue","webpack://task-manager-vue/./src/components/modals/EditModal.vue?a2ce","webpack://task-manager-vue/./src/components/TaskList.vue","webpack://task-manager-vue/./src/components/TaskList.vue?ba79","webpack://task-manager-vue/./src/App.vue","webpack://task-manager-vue/./src/store/index.js","webpack://task-manager-vue/./src/main.js","webpack://task-manager-vue/webpack/bootstrap","webpack://task-manager-vue/webpack/runtime/chunk loaded","webpack://task-manager-vue/webpack/runtime/define property getters","webpack://task-manager-vue/webpack/runtime/global","webpack://task-manager-vue/webpack/runtime/hasOwnProperty shorthand","webpack://task-manager-vue/webpack/runtime/jsonp chunk loading","webpack://task-manager-vue/webpack/startup"],"sourcesContent":["<template>\n  \n  <article class=\"block p-6 border rounded-lg shadow bg-gray-800 border-gray-500 min-h-[220px]\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <span class=\"text-sm font-bold leading-none text-gray-50\">{{ props.statue }}</span>\n      <div class=\"flex justify-end gap-1\">\n        <!-- Edit Button -->\n        <button class=\"inline-block text-gray-300 hover:bg-gray-600 focus:ring-4 focus:outline-none focus:ring-gray-500 rounded-lg text-sm p-1.5\" @click=\"openModalFunction(props.id)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-pencil\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4\"></path>\n            <path d=\"M13.5 6.5l4 4\"></path>\n          </svg>\n        </button>\n\n        <!-- Delete Button -->\n        <button class=\"inline-block text-gray-300 hover:bg-[#c53333] hover:text-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-500 rounded-lg text-sm p-1.5\" @click=\"removeTask(props.id)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-trash\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M4 7l16 0\"></path>\n            <path d=\"M10 11l0 6\"></path>\n            <path d=\"M14 11l0 6\"></path>\n            <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\"></path>\n            <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n    <h5 class=\"mb-3 text-lg font-medium text-gray-50 dark:text-white\">{{ props.title }}</h5>\n    <p class=\"text-md text-gray-200\" >{{ props.text }}</p>\n  </article>\n</template>\n\n<script setup>\n  // imports\n  import { useStore } from 'vuex';\n  import { defineProps } from 'vue';\n  \n  const store = useStore();\n\n  // pas props\n  const props = defineProps({\n    text: String,\n    title: String,\n    statue: String,\n    id: Number,\n  });\n\n  // open edit task modal\n  const openModalFunction = (taskId) => {\n    store.dispatch('openModalEditTask');\n    store.dispatch('setSelectedTask', taskId);\n  }\n\n  // handel remove task\n  const removeTask = (taskId) => {\n    store.commit('removeTask', taskId);\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>","import script from \"./TaskCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <a class=\"flex items-center justify-center p-6 border rounded-lg shadow bg-gray-800 border-gray-500 hover:opacity-90 hover:bg-gray-700 cursor-pointer min-h-[220px] focus:bg-gray-800\" @click=\"openModalFunction\">\n      <div class=\"bg-gray-500 rounded-full p-5\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-plus\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M12 5l0 14\"></path>\n            <path d=\"M5 12l14 0\"></path>\n        </svg>\n      </div>\n    </a>\n  </template>\n  \n  <script setup>\n    // imports\n    import { useStore } from 'vuex';\n\n    const store = useStore();\n\n    // handel open add task modal\n    const openModalFunction = () => {\n      store.dispatch('openModalAddTask')\n    }\n\n  </script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n  </style>","import script from \"./AddTaskCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddTaskCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <Teleport to=\"body\">\n        <Transition name=\"modal-outer\">\n            <div v-show=\"modalOpen\" class=\"fixed bg-gray-900 w-full bg-opacity-30 min-h-full top-0 left-0 flex justify-center items-center px-8 sm:px-4 py-4\">\n                <Transition name=\"modal-inner\">\n                    <div v-if=\"modalOpen\" class=\"relative w-full max-w-xl max-h-full bg-gray-900\">\n                        <!-- Modal content -->\n                        <button type=\"button\" class=\"absolute top-[1.7rem] right-7 text-gray-200 bg-transparent hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center hover:bg-gray-600\" @click=\"closeAppModal\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-x\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                <path d=\"M18 6l-12 12\"></path>\n                                <path d=\"M6 6l12 12\"></path>\n                            </svg>\n                        </button>\n                        <div class=\"px-6 py-6 lg:px-8\">\n                            <h3 class=\"mb-14 mr-10 text-3xl sm:text-xl font-medium text-gray-50\">Add New Task</h3>\n                            <form class=\"space-y-6\" @submit.prevent=\"addTask\">\n                                <div>\n                                    <label for=\"AddTaskTitle\" class=\"block mb-2 text-lg font-medium text-gray-100\">Title</label>\n                                    <input v-model=\"newTask.title\" type=\"text\" name=\"AddTasktitle\" id=\"AddTasktitle\" class=\"border text-gray-200 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400\" placeholder=\"Your task title\" required>\n                                </div>\n                                <div>\n                                    <label for=\"AddTaskStatue\" class=\"block mb-2 text-lg font-medium text-gray-100\">Statue</label>\n                                    <select v-model=\"newTask.statue\" id=\"AddTaskStatue\" class=\"border text-gray-200 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400 focus:ring-blue-500 focus:border-blue-500\">\n                                        <option value=\"select\" selected disabled>Choose a Status</option>\n                                        <option value=\"To Do\">To Do</option>\n                                        <option value=\"In Progress\">In Progress</option>\n                                        <option value=\"Pending\">Pending</option>\n                                        <option value=\"Review\">Review</option>\n                                        <option value=\"Done\">Done</option>\n                                        <option value=\"In Hold\">In Hold</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-14\">\n                                    <label for=\"addTaskContent\" class=\"block mb-2 text-lg font-medium text-gray-100\">Task</label>\n                                    <textarea v-model=\"newTask.text\" id=\"addTaskContent\" rows=\"7\" class=\"block p-2.5 w-full text-sm rounded-lg border focus:ring-blue-500 focus:border-blue-500 bg-gray-700 border-gray-600 placeholder-gray-400 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Write your thoughts here...\"></textarea>\n                                </div>\n                                <p class=\"text-sm text-error\" v-show=\"errorMissage\">Please fill in all fields before adding the task.</p>\n                                <button type=\"submit\" class=\"flex ml-auto text-white bg-gray-300 hover:bg-gray-200 focus:ring-blue-300 font-medium rounded-lg text-md px-5 py-2.5 text-right items-center mr-2 text-gray-900 focus:outline-none focus:ring-1 focus:ring-gray-200\" @click=\"addNewTask\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-plus\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                    <path d=\"M12 5l0 14\"></path>\n                                    <path d=\"M5 12l14 0\"></path>\n                                    </svg>\n                                    Add Task\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </Transition>\n            </div>\n        </Transition>\n    </Teleport>\n</template>\n\n<script setup>\n    import { useStore } from \"vuex\";\n    import { ref } from \"vue\";\n    \n    const modalOpen = ref(false);\n    const newTask = ref({\n        title: '',\n        statue: 'select',\n        text: ''\n    });\n    const errorMissage = ref(false)\n    const store = useStore();\n\n    const addNewTask = () => {\n        \n        // Check if the title, statue, and text fields are not empty\n        if (newTask.value.title && newTask.value.statue && newTask.value.text && newTask.value.statue !== 'select' ) {\n            store.dispatch('addTask', { ...newTask.value } );\n            clearForm();\n        } else {\n            errorMissage.value = true\n        }\n    }\n\n    // clear the from after submited the new task\n    const clearForm = () => {\n        newTask.value.title = '';\n        newTask.value.statue = 'select';\n        newTask.value.text = '';\n        errorMissage.value = false;\n    };\n\n    // handel close modal\n    const closeAppModal = () => {\n        store.dispatch('closeModalAddTask');\n        clearForm();\n    }\n\n    // watch the store modaladdTask for togglen the add task modal\n    store.watch(() => store.state.modalAddTask, (newValue) => {\n        modalOpen.value = newValue\n    })\n</script>\n\n<style scoped>\n    .modal-outer-enter-active,\n    .modal-outer-leave-active {\n        transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02);\n    }\n\n    .modal-outer-enter-from,\n    .modal-outer-leave-to {\n        opacity: 0;\n    }\n\n    .modal-inner-enter-active {\n        transition: all 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02) 0.15s;\n    }\n\n    .modal-inner-leave-active {\n        transition: all 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02);\n    }\n\n    .modal-inner-enter-from {\n        opacity: 0;\n        transform: scale(0.8);\n    }\n\n    .modal-inner-leave-to {\n        transform: scale(0.8);\n    }\n</style>\n","import script from \"./AddModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddModal.vue?vue&type=style&index=0&id=73962c14&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-73962c14\"]])\n\nexport default __exports__","<template>\n    <Teleport to=\"body\">\n        <Transition name=\"modal-outer\">\n            <div v-show=\"modalOpen\" class=\"fixed bg-gray-900 w-full bg-opacity-30 min-h-full top-0 left-0 flex justify-center items-center px-8 sm:px-4 py-4\">\n                <Transition name=\"modal-inner\">\n                    <div v-if=\"modalOpen\" class=\"relative w-full max-w-xl max-h-full bg-gray-900\">\n                        <!-- Modal content -->\n                        <button type=\"button\" class=\"absolute top-[1.7rem] right-7 text-gray-200 bg-transparent hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center hover:bg-gray-600\" @click=\"closeEditModal\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-x\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                <path d=\"M18 6l-12 12\"></path>\n                                <path d=\"M6 6l12 12\"></path>\n                            </svg>\n                        </button>\n                        <div class=\"px-6 py-6 lg:px-8\">\n                            <h3 class=\"mb-14 mr-10 text-3xl sm:text-xl font-medium text-gray-50\">Edit Task</h3>\n                            <form class=\"space-y-6\" @submit.prevent=\"addTask\">\n                                <div>\n                                    <label for=\"AddTaskTitle\" class=\"block mb-2 text-lg font-medium text-gray-100\">Title</label>\n                                    <input v-model=\"taskEdit.title\" type=\"text\" name=\"AddTasktitle\" id=\"AddTasktitle\" class=\"border text-gray-200 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400\" placeholder=\"Your task title\" required>\n                                </div>\n                                <div>\n                                    <label for=\"AddTaskStatue\" class=\"block mb-2 text-lg font-medium text-gray-100\">Statue</label>\n                                    <select v-model=\"taskEdit.statue\" id=\"AddTaskStatue\" class=\"border text-gray-200 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400 focus:ring-blue-500 focus:border-blue-500\">\n                                        <option value=\"To Do\">To Do</option>\n                                        <option value=\"In Progress\">In Progress</option>\n                                        <option value=\"Pending\">Pending</option>\n                                        <option value=\"Review\">Review</option>\n                                        <option value=\"Done\">Done</option>\n                                        <option value=\"In Hold\">In Hold</option>\n                                    </select>\n                                </div>\n                                <div class=\"mb-14\">\n                                    <label for=\"addTaskContent\" class=\"block mb-2 text-lg font-medium text-gray-100\">Task</label>\n                                    <textarea v-model=\"taskEdit.text\" id=\"addTaskContent\" rows=\"7\" class=\"block p-2.5 w-full text-sm rounded-lg border focus:ring-blue-500 focus:border-blue-500 bg-gray-700 border-gray-600 placeholder-gray-400 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Write your thoughts here...\"></textarea>\n                                </div>\n                                <p class=\"text-sm text-error\" v-show=\"errorMissage\">Please fill in all fields before adding the task.</p>\n                                <button type=\"submit\" class=\"flex ml-auto text-white bg-gray-300 hover:bg-gray-200 focus:ring-blue-300 font-medium rounded-lg text-md px-5 py-2.5 text-right items-center mr-2 text-gray-900 focus:outline-none focus:ring-1 focus:ring-gray-200\" @click=\"editTask\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-pencil\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                        <path d=\"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4\"></path>\n                                        <path d=\"M13.5 6.5l4 4\"></path>\n                                    </svg>\n                                    Edit Task\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </Transition>\n            </div>\n        </Transition>\n    </Teleport>\n</template>\n\n<script setup>\n    import { useStore } from \"vuex\";\n    import { ref } from \"vue\";\n    \n    const modalOpen = ref(false);\n    const taskEdit = ref(null);\n    // const targetTask = ref(null);\n    const errorMissage = ref(false)\n    const store = useStore();\n    \n    // handel close modal\n    const closeEditModal = () => {\n        taskEdit.value = null;\n        store.dispatch('closeModalEditTask')\n    }\n\n    // handle edit task\n    const editTask = () => {\n        if (taskEdit.value.title && taskEdit.value.statue && taskEdit.value.text) {\n            store.dispatch('editTask', { ...taskEdit.value });\n\n            closeEditModal();\n            errorMissage.value = false;\n        } else {\n            errorMissage.value = true;\n        }\n    };\n\n    // watch the selecteTask\n    store.watch(() => store.state.selecteTask, (newValue) => {\n        taskEdit.value = { ...newValue };\n    })\n    // watch the store modalEditTask for togglen the add task modal\n    store.watch(() => store.state.modalEditTask, (newValue) => {\n        modalOpen.value = newValue\n    })\n</script>\n\n<style scoped>\n    .modal-outer-enter-active,\n    .modal-outer-leave-active {\n        transition: opacity 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02);\n    }\n\n    .modal-outer-enter-from,\n    .modal-outer-leave-to {\n        opacity: 0;\n    }\n\n    .modal-inner-enter-active {\n        transition: all 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02) 0.15s;\n    }\n\n    .modal-inner-leave-active {\n        transition: all 0.3s cubic-bezier(0.52, 0.02, 0.19, 1.02);\n    }\n\n    .modal-inner-enter-from {\n        opacity: 0;\n        transform: scale(0.8);\n    }\n\n    .modal-inner-leave-to {\n        transform: scale(0.8);\n    }\n</style>\n","import script from \"./EditModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditModal.vue?vue&type=style&index=0&id=1e759ffe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1e759ffe\"]])\n\nexport default __exports__","<template>\n    <section class=\"grid grid-cols-1 lg:grid-cols-3 md:grid-cols-2 gap-4\">\n        <TaskCard v-for=\"task in tasks\" :key=\"task.id\" :title=\"task.title\" :text=\"task.text\" :statue=\"task.statue\" :id=\"task.id\"/>\n        <AddTaskCard />\n    </section>\n    <AddModal />\n    <EditModal />\n</template>\n\n<script setup>\n    // imports\n    import { useStore } from \"vuex\";\n    import { computed } from \"vue\";\n\n    // components\n    import TaskCard from './TaskCard';\n    import AddTaskCard from './AddTaskCard';\n    import AddModal from \"./modals/AddModal.vue\";\n    import EditModal from \"./modals/EditModal.vue\";\n\n    const store = useStore();\n    const tasks = computed(() => store.state.taskList);\n</script>\n\n<style>\n    \n</style>","import script from \"./TaskList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a039bf24&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createStore } from \"vuex\";\nimport axios from 'axios'\n\nconst store = createStore({\n    state: {\n        modalAddTask: false,\n        modalEditTask: false,\n        selecteTask: null,\n        taskList: []\n    }, \n    mutations: {\n        setTaskList(state, newTasks) {\n            state.taskList = newTasks;\n        },\n\n        // remove task\n        removeTask(state, taskId) {\n            state.taskList = state.taskList.filter((task) => task.id !== taskId);\n        },\n\n        // add task modal control\n        openModalAddTask(state) {\n            state.modalAddTask = true\n        },\n        closeModalAddTask(state) {\n            state.modalAddTask = false\n        },\n\n        // edit task modal controls\n        openModalEditTask(state) {\n            state.modalEditTask = true;\n            \n        },\n        closeModalEditTask(state) {\n            state.modalEditTask = false\n        },\n        setSelectedTask(state, taskId) {\n            state.selecteTask = state.taskList.find(item => item.id === taskId )\n        },\n        clearSelectedtask(state) {\n            state.selecteTask = null;\n        },\n\n        // add task\n        addTask(state, newTask) {\n            const index = state.taskList.length + 1; // get the id from task array index\n            \n            // push the new task\n            state.taskList.push({\n                id: index,\n                ...newTask\n            })\n        },\n\n        // updated the task\n        updateTask(state, updatedTask) {\n            const index = state.taskList.findIndex((task) => task.id === updatedTask.id);\n            if (index !== -1) {\n              state.taskList[index] = updatedTask;\n            }\n            state.selecteTask = null\n        }\n    },\n    actions: {\n        // Fetch tasks from JSON file using Axios\n        async fetchTasks({ commit }) {\n            try {\n              const response = await axios.get('./tasks.json'); \n              const tasks = response.data.tasks;\n              commit('setTaskList', tasks); // Update the Tasks\n            } catch (error) {\n              console.error('Error:', error);\n            }\n        },\n        // remove task\n        removeTask({ commit }, taskId) {\n            commit('removeTask', taskId);\n        },\n\n        // add task modal\n        openModalAddTask({commit}) {\n            commit('openModalAddTask');\n        },\n        closeModalAddTask({ commit }) {\n            commit('closeModalAddTask');\n        },\n\n        // edit task modal\n        openModalEditTask({ commit }) {\n            commit('openModalEditTask');\n        },\n        closeModalEditTask({ commit }) {\n            commit('closeModalEditTask');\n            commit('clearSelectedtask');\n        },\n        setSelectedTask({ commit }, taskId) {\n            commit('setSelectedTask', taskId)\n        },\n\n        // add new task\n        addTask({commit}, newTask) {\n            commit('addTask', newTask);\n            commit('closeModalAddTask');\n        },\n\n        async editTask({ commit }, updatedTask) {\n            commit(\"updateTask\", updatedTask);\n            commit('closeModalEditTask');\n        }\n    },\n})\n\nexport default store;","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './assets/tailwind.css'\nimport store from \"./store\";\n\nconst app = createApp(App);\n\napp.use(store);\n\n// Fetch tasks on app initialization\nstore.dispatch('fetchTasks');\n\n\n\napp.mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktask_manager_vue\"] = self[\"webpackChunktask_manager_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1128); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["store","useStore","openModalFunction","taskId","dispatch","removeTask","commit","__exports__","modalOpen","ref","newTask","title","statue","text","errorMissage","addNewTask","value","clearForm","closeAppModal","watch","state","modalAddTask","newValue","taskEdit","closeEditModal","editTask","selecteTask","modalEditTask","tasks","computed","taskList","createStore","mutations","setTaskList","newTasks","filter","task","id","openModalAddTask","closeModalAddTask","openModalEditTask","closeModalEditTask","setSelectedTask","find","item","clearSelectedtask","addTask","index","length","push","updateTask","updatedTask","findIndex","actions","fetchTasks","response","axios","get","data","error","console","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}